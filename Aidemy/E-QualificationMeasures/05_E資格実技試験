# E資格実技試験
# (Aidemy E資格対策講座(実技試験))
import pandas as pd
import numpy as np
from pandas import DataFrame
from sklearn.datasets import load_boston
from sklearn.decomposition import PCA
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.ensemble import GradientBoostingRegressor
from sklearn.metrics import r2_score
from sklearn.metrics import mean_squared_error

data = load_boston()
data

x = pd.DataFrame(data=data.data, columns=data.feature_names)  # xにはMEDV以外の列が格納されています
x.head(3)

y = pd.DataFrame(data=data.target, columns=["MEDV"])  # yにはMEDVが格納されています
y.head(3)

df = pd.concat([x, y], axis=1)
df.head(3)

corr = df.corr()
sns.heatmap(corr, vmin=-1, vmax=1, annot=True, fmt='.2f', annot_kws={"fontsize":8})
plt.show()

corr_high = corr[(corr['MEDV']>0.5) | (corr['MEDV']<-0.5)]['MEDV']
corr_high

columns = corr_high.index.values
corr2 = corr.loc[columns][columns]
corr2[(corr2>0.5) | (corr2<-0.5)]

df2 = df.loc[:, ['RM', 'LSTAT', 'MEDV']]
sns.pairplot(df2)
plt.legend()

X = x[['RM', 'LSTAT']]
X.head(3)

# 前処理：PCA
pca = PCA()
pca.fit(X)
pca.fit(y)

# テストと学習データを分割する
train_x, test_x, train_y, test_y = train_test_split(X, y, test_size=0.3, random_state=1)

# 以下にコードを書いてください
model = GradientBoostingRegressor()
model.fit(train_x, train_y)

pred_train_y = model.predict(train_x)
pred_test_y = model.predict(test_x)

# モデルの評価：評価指標はRMSE
print('train')
print('————————————')
print('  R2：{:.3f}'.format(r2_score(train_y, pred_train_y)))
print('RMSE：{:.3f}'.format(np.sqrt(mean_squared_error(train_y, pred_train_y))))
print()
print('test')
print('————————————')
print('  R2：{:.3f}'.format(r2_score(test_y, pred_test_y)))
print('RMSE：{:.3f}'.format(np.sqrt(mean_squared_error(test_y, pred_test_y))))