# 深層学習のための正則化
# (Aidemy E資格対策講座(添削課題3))
import numpy as np
from keras.datasets import mnist
# mnistのデータセットをロード
(x_train, t_train), (x_test, t_test) = mnist.load_data()
# データを削減
x_train = x_train[:300]
t_train = t_train[:300]
# ドロップアウト
class Dropout:
        def __init__(self, dropout_ratio=0.5):
            self.dropout_ratio = dropout_ratio
            self.mask = None
        def forward(self, x, train_flg=True):
            if train_flg:
                self.mask = np.random.rand(*x.shape) > self.dropout_ratio
                return x * self.mask
            else:
                return x * (1.0 - self.dropout_ratio)
        def backward(self, dout):
            return dout * self.mask
# ドロップアウトをt_trainに使用してください。
drop = Dropout()
y = drop.forward(t_train)
print('ドロップアウト前')
print(t_train)
print()
print('ドロップアウト後')
print(y)