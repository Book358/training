# 機械学習概論
# (Aidemy データ分析講座(添削課題5))
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
from sklearn import datasets
from sklearn import svm
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
# (1.)
# Irisデータセットをロード
iris = datasets.load_iris()
# 3,4列目の特徴量を抽出
X = iris.data[:, [2,3]]
# クラスラベルを取得
y = iris.target
# (2.)
X_train, X_test, y_train, y_test = train_test_split(X,
                                                    y,
                                                    test_size=0.3,
                                                    random_state=0)
# (3.)
svc = svm.SVC(C=1, kernel='rbf', gamma=0.001)
svc.fit(X_train, y_train)
# (4.)
y_pred = svc.predict(X_test)
print ("Accuracy: %.2f"%accuracy_score(y_test, y_pred))
print()
print("1. 特徴量と正解ラベルの作成")
print("データセット(iris)の読込")
print("  ↓")
print("特徴量(X)を作成 (iris(data)の3,4列目を代入)")
print("  ↓")
print("正解ラベル(y)を作成 (iris(target)を代入)")
print()
print("2. データ分割 (交差検証の為)")
print("データ(X, y)を学習用データ(train)とテスト用データ(test)に分割")
print("※分割率 train 70%，test 30%")
print()
print("X_train：特徴量(学習用データ)")
print("X_test ：特徴量(テスト用データ)")
print("y_train：正解ラベル(学習用データ)")
print("y_test ：正解ラベル(テスト用データ)")
print()
print("3. 学習モデル構築")
print("機械学習のアルゴリズム(設計書)を作成")
print("分類器：svc (サポートベクターマシン)")
print("  ↓")
print("学習用データの特徴量(X_train)と正解ラベル(y_train)を分類器(svc)に入れ、機械学習を実行(fit)")
print()
print("4. モデルの評価")
print("テスト用データの特徴量(y_test)を学習済モデル(svc)に入れ、予測値を算出(predict)")
print("y_pred：学習済モデルの予測値")
print("  ↓")
print("モデル予測値(y_pred)がテスト用データの正解ラベル(y_test)にどれだけ近しいかを示す指標(accuracy_score)を算出")
print("※accuracy_scoreは0～1を取り、値が1に近いほどモデル精度が良い")