# 時系列解析Ⅰ (統計学的モデル)
# (Aidemy データ分析講座(添削課題9))
import pandas as pd
import numpy as np
import warnings
import itertools
import statsmodels.api as sm
import matplotlib.pyplot as plt
from IPython.core.interactiveshell import InteractiveShell
pd.options.display.max_rows = 5
InteractiveShell.ast_node_interactivity = "all"

# 関数 (orderの最適化)
def selectparameter(DATA, s):
    p = d = q = range(0, 2)
    pdq = list(itertools.product(p, d, q))
    seasonal_pdq = [(x[0], x[1], x[2], s) for x in list(itertools.product(p, d, q))]
    parameters = []
    BICs = np.array([])
    for param in pdq:
        for param_seasonal in seasonal_pdq:
            try:
                mod = sm.tsa.statespace.SARIMAX(DATA,
                                                order=param,
                                                seasonal_order=param_seasonal)
                results = mod.fit()
                parameters.append([param, param_seasonal, results.bic])
                BICs = np.append(BICs, results.bic)
            except:
                continue
    return parameters[np.argmin(BICs)]

# データセット
data = pd.read_csv("./5060_tsa_data/monthly-car-sales-in-quebec-1960.csv")
data
data.index = pd.date_range("1960-01-31", "1968-12-31", freq="M")
data
del data["Month"]
data

# SARIMAの最適パラメータ (周期：12カ月)
param = selectparameter(data, 12)
param

# モデル構築 (SARIMA)
SARIMA = sm.tsa.statespace.SARIMAX(data, order=(0,1,1), seasonal_order=(1,1,0,12)).fit()
SARIMA.bic

# 予測値
pred = SARIMA.predict("1968-01-31", "1972-01-31")
pred

# データのプロット
plt.plot(data)
plt.plot(pred, color="r")
plt.show()